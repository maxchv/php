Написать приложение для тестирования знаний массивов php.

Пример получения списка с описанием всех функций по работе с массивами в PHP
с сайта php.net:

$html = file_get_contents("http://php.net/manual/ru/ref.array.php");
$re = '/<li><a.+?>(?P<func>\w+)<\/a>\s—\s(?P<descr>.+?)<\/li>/m';
if(FALSE !== preg_match_all($re, $html, $res)) {
    echo "<pre>";
    $func = array_combine($res['func'], $res['descr']);
    print_r($func);
    echo "</pre>";
}

Необходимо:	
	1. Реализовать регистрацию/авторизацию пользователя
	2. Ограничить время тестирования 20 мин
	3. Количество задаваемых вопросов - 20
	4. Тестирующемуся задается по одному вопросу на странице
	5. Каждый вопрос состоит из 4 вариантов неправильных ответов
           и один или два должны быть правильные
	6. Вопрос - это имя функции и ее описание, соответственно в
	   неправильных вариантах имя функции не соответствует описанию,
	   а в правильных - соответствует
	7. Тестирующийся выбирает правильные ответы используя checkbox.
	8. По истичении времени тестирования или после ответа на последний вопрос
           отображается результаты тестирования с отображением количества правильных
           ответов и не правильных ответов.
	9. Результаты тестирования отображаются в виде таблицы с указанием номера вопроса,
           правильными ответами и полученными ответами.
	10. Во время тестирования информацию необходимо сохранять в сессии


Пример вопроса:
	
	Укажите правильные варианты:
	1. Функция array_combine - создает новый массив, используя один массив в качестве ключей, а другой для его значений
	2. Функция array_multisort -  создает массив и заполняет его значениями, с определенными ключами
	3. Функция array_keys - сортирует массив в обратном порядке, сохраняя ключи
	4. Функция array_splice - добавляет один или несколько элементов в начало массива
	5. Функция list -  вычисляет пересечение массивов, используя для сравнения значений callback-функцию

Дополнительное задание:
	1. Реализовать админ страницу с возможностью задания параметров тестирования:
		- время тестирования
		- количество задаваемых вопросов
		- количество ответов
		- количество правильных ответов
	2. После завершения тестирования данные тестирования сохранять для данного студента
	3. Реализовать личный кабинет с возможность просмотра результатов ранее пройденых тестов.